import asyncio
import os
from fileinput import filename
from io import BytesIO

from aiogram import Router, types, Bot, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import KeyboardButton, ReplyKeyboardRemove, Message
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from dotenv import load_dotenv, find_dotenv

from common.bot_comands_list import delete_later
from database.database import data_names
from database.database import mark_payment
from photo_operation.google_drive_auth import get_drive
from photo_operation.operation_with_photo import download_telegram_file, upload_to_google_drive, drive
load_dotenv(find_dotenv())

phone_number = '+79788705926'
TOKEN=os.getenv('TOKEN')

FOLDER_ID = '1ymw4Avo1HWhBrtYt_mlN4E6Is9KVFo2-'

drive = get_drive()

def proverka(frist_leters:str):
    for name in data_names:
        if frist_leters.lower() in name.lower():
            return True
    return False



def keyboard_from_students(frist_leters):
    builder = ReplyKeyboardBuilder()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –∏–º–µ–Ω–∞–º–∏ (–ø–æ 2 –≤ —Ä—è–¥)
    for name in data_names:
        if frist_leters.lower() in name.lower():
            builder.add(KeyboardButton(text=name))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    builder.add(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"))

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤ —Å–µ—Ç–∫—É 2 –∫–æ–ª–æ–Ω–∫–∏
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)


get_students_list_router = Router()

class Form(StatesGroup):
    waiting_for_name_letters = State()
    waiting_for_child = State()
    waiting_for_month = State()
    waiting_for_photo = State()



@get_students_list_router.callback_query(lambda c: c.data == 'btn2')
async def process_callback_button1(callback_query: types.CallbackQuery, state: FSMContext):
    await state.set_state(Form.waiting_for_name_letters)
    sent = await callback_query.message.answer('–ù–∞–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–≤—ã–µ —Ç—Ä–∏ –±—É–∫–≤—ã –∏''–º–µ–Ω–∏ –≤–∞—à–µ–≥–æ —É—á–µ–Ω–∏–∫–∞ –Ω–∞ –∫–∏—Ä–∏–ª–∏—Ü–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—é–¥–∞,\n–µ—Å–ª–∏ –≤ —Å–µ–º—å–µ —É—á–∞—Ç—Å—è –¥–≤–∞ —Ä–µ–±—ë–Ω–∫–∞, –∏—Ö –∏–º–µ–Ω–∞ –±—É–¥—É—Ç —Å–æ –∑–Ω–∞–∫–æ–º +')
    asyncio.create_task(delete_later(callback_query.message, delay=24 * 3600))
    asyncio.create_task(delete_later(sent, delay=24 * 3600))


@get_students_list_router.message(F.text == '‚ùå –û—Ç–º–µ–Ω–∞')
async def otmena(message: types.Message):
    sent = await message.answer('–û—Ç–º–µ–Ω–µ–Ω–æ\n–µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start',reply_markup=ReplyKeyboardRemove())
    asyncio.create_task(delete_later(message, delay=24 * 3600))
    asyncio.create_task(delete_later(sent, delay=24 * 3600))


@get_students_list_router.message(Form.waiting_for_name_letters)
async def process_name_letters(message: types.Message, state: FSMContext):
    user_input = message.text.strip()
    sent = None
    if len(user_input) == 3 and proverka(user_input):
        await state.set_state(Form.waiting_for_child)
        keyboard = keyboard_from_students(user_input)
        sent = await message.answer('–≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ–≥–æ —É—á–µ–Ω–∏–∫–∞:', reply_markup=keyboard)
    elif len(user_input) != 3:
        sent = await message.answer('–¥–ª–∏–Ω–Ω–∞ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —Ä–∞–≤–Ω—è–µ—Ç—Å—è —Ç—Ä—ë–º')
    elif not proverka(user_input):
        sent = await message.answer(f'''–£—á–µ–Ω–∏–∫–∞, –∏–º—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ {user_input} –Ω–µ—Ç—É –≤ —Å–ø–∏—Å–∫–∞—Ö —É—á–µ–Ω–∏–∫–æ–≤.
    –ï—Å–ª–∏ –≤—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏ –ø–µ—Ä–≤—ã–µ —Ç—Ä–∏ –±—É–∫–≤—ã –∏–º–µ–Ω–∏ –≤–∞—à–µ–≥–æ —É—á–µ–Ω–∏–∫–∞,–Ω–∞–∂–º–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –æ–ø–ª–∞—Ç—ã –∑–∞–Ω–æ–≤–æ.
    –ù–æ –µ—Å–ª–∏ –≤—ã –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–ª–∏, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ  –Ω–∞ Whatsapp {phone_number}
     –∏–ª–∏ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –≥—Ä—É–ø–ø—É, –æ—Ç–∫—É–¥–∞ –≤—ã –ø–æ–ø–∞–ª–∏ —Å—é–¥–∞, –∏ –º—ã –≤—Å—ë –ø–æ—á–∏–Ω–∏–º üôÇ''')
        await state.set_state(None)
    asyncio.create_task(delete_later(message, delay=24 * 3600))
    asyncio.create_task(delete_later(sent, delay=24 * 3600))



@get_students_list_router.message(Form.waiting_for_photo,F.photo)
async def wait_photo(message: types.Message,state: FSMContext):
    data = await state.get_data()
    name = data["name"]
    month = data['selected']
    file_id = message.photo[-1].file_id
    buf, ext = download_telegram_file(TOKEN, file_id)
    filename = f"–û–ø–ª–∞—Ç–∞_–æ—Ç_{name} –∑–∞ {month}.{ext}"
    filename1 = f"–í—ã –æ–ø–ª–∞—Ç–∏–ª–µ –∑–∞ {name} –∑–∞ {month}"
    upload_to_google_drive(drive, buf, ext, FOLDER_ID,filename)
    await message.answer(f'''–î–∂–∞–∑–∞–∫–∏–õ–ª–∞—Ö–∞ —Ö–∞–π—Ä–∞–Ω –∑–∞ –æ–ø–ª–∞—Ç—É! üåü{filename1}
–Ø –µ—â—ë —Å–æ–≤—Å–µ–º –º–æ–ª–æ–¥–æ–π –∏ –º–æ–≥—É –æ—à–∏–±–∞—Ç—å—Å—è. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, 
–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞ Whatsapp +79788705926 –∏–ª–∏ –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –≥—Ä—É–ø–ø—É, –æ—Ç–∫—É–¥–∞ –≤—ã –ø–æ–ø–∞–ª–∏ —Å—é–¥–∞, –∏ –º—ã –≤—Å—ë –ø–æ—á–∏–Ω–∏–º üôÇ''')
    for i in month:
        mark_payment(name,i.lower())
    await state.clear()
    asyncio.create_task(delete_later(message, delay=24 * 3600))

@get_students_list_router.message(F.document & (F.document.mime_type == "application/pdf"))
async def upload_pdf(message: types.Message, bot,state: FSMContext):
    data = await state.get_data()
    name = data["name"]
    month = data['selected']
    # —Å–∫–∞—á–∏–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –≤ –ø–∞–º—è—Ç—å
    buf = BytesIO()
    await bot.download(message.document, destination=buf)
    buf.seek(0)
    # –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
    ext = "pdf"
    filename = f"–û–ø–ª–∞—Ç–∞_–æ—Ç_{name} –∑–∞ {month}.{ext}"
    # –≥—Ä—É–∑–∏–º –≤ –¥–∏—Å–∫
    upload_to_google_drive(drive, buf, ext, FOLDER_ID,filename)
    await message.answer(f"‚úÖ –æ–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∞!")
    for i in month:
        mark_payment(name, i.lower())
    asyncio.create_task(delete_later(message, delay=24 * 3600))
    await state.clear()
